
workflows:
    android-workflow:
       name: Android-default
       instance_type: linux_x2
       environment:
       scripts:
         - name: Test
           script: |
               echo "hello"
    ios-workflow:
        name: iOS workflow
        environment:
          groups:
            - ios_creds
          ios_signing:
            distribution_type: app_store
            bundle_identifier: org.eas-update-integration.io
        integrations:
          app_store_connect: Codemagic  
        scripts:
  # - name: Set up keychain to be used for code signing using Codemagic CLI 'keychain' command
  #   script: keychain initialize
  # - name: Set up provisioning profiles from environment variables
  #   script: | 
  #       PROFILES_HOME="$HOME/Library/MobileDevice/Provisioning Profiles"
  #       mkdir -p "$PROFILES_HOME"
  #       PROFILE_PATH="$(mktemp "$PROFILES_HOME"/$(uuidgen).mobileprovision)"
  #       echo ${CM_PROVISIONING_PROFILE} | base64 --decode > "$PROFILE_PATH"
  #       echo "Saved provisioning profile $PROFILE_PATH"
  # - name: Set up signing certificate
  #   script: | 
  #       echo $CM_CERTIFICATE | base64 --decode > /tmp/certificate.p12
  #       if [ -z ${CM_CERTIFICATE_PASSWORD+x} ]; then
  #           # when using a certificate that is not password-protected
  #           keychain add-certificates --certificate /tmp/certificate.p12
  #       else
  #           # when using a password-protected certificate
  #           keychain add-certificates --certificate /tmp/certificate.p12 --certificate-password $CM_CERTIFICATE_PASSWORD
  #       fi
  # - name: Set up code signing settings on Xcode project
  #   script: xcode-project use-profiles
            - name: Test
              script: echo $TEST
            - name: Install npm dependencies
              script: |
                npm install --legacy-peer-deps
            # - name: CodePush
            #   script: |
            #       chmod +x ./codepush.sh
            #       git clone https://github.com/microsoft/code-push-server /tmp/code-push-server
            #       cd /tmp/code-push-server/cli
            #       npm install && npm run build && npm install -g
            - name: Install CocoaPods dependencies
              script: |
                cd ios && pod install
            - name: Set up code signing settings on Xcode project
              script: |
                xcode-project use-profiles --warn-only
            - name: Increment build number
              script: |
                cd $CM_BUILD_DIR/ios
                LATEST_BUILD_NUMBER=$(app-store-connect get-latest-testflight-build-number "6738749854" --pre-release-version 1.0)
                agvtool new-version -all $(($LATEST_BUILD_NUMBER + 3))
            - name: Build ipa for distribution
              script: |
                xcode-project build-ipa \
                  --workspace "ios/OtaUpdate.xcworkspace" \
                  --scheme "OtaUpdate"
        artifacts:
            - build/ios/ipa/*.ipa
            - /tmp/xcodebuild_logs/*.log
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.app
            - $HOME/Library/Developer/Xcode/DerivedData/**/Build/**/*.dSYM
          # app_store_connect:
          #   auth: integration
